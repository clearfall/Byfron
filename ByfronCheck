$IsAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-not $IsAdmin) {
    Write-Host "`n[WARNING] This script is NOT running with Administrator privileges." -ForegroundColor Red
    Write-Host "[ACTION] Please right-click PowerShell and then select 'Run as Administrator.'" -ForegroundColor Yellow
    Write-Host ""
    Pause
    exit 1
}

function Write-ColoredLine {
    param (
        [string]$Text,
        [ConsoleColor]$Color = 'White'
    )
    $oldColor = $Host.UI.RawUI.ForegroundColor
    $Host.UI.RawUI.ForegroundColor = $Color
    Write-Host $Text
    $Host.UI.RawUI.ForegroundColor = $oldColor
}

function Wait-ForEnter {
    param(
        [string]$Message = "Press Enter to Continue"
    )
    Start-Sleep -Seconds 1
    Write-ColoredLine $Message Yellow
    while ($true) {
        if ([System.Console]::KeyAvailable) {
            $key = [System.Console]::ReadKey($true)
            if ($key.Key -eq "Enter") { break }
        }
        Start-Sleep -Milliseconds 100
    }
}

Clear-Host
Write-Host "__________          _____                      " -ForegroundColor Yellow
Write-Host "\______   \___.__._/ ____\______  ____   ____  " -ForegroundColor Yellow
Write-Host " |    |  _<   |  |\   __\\_  __ \/  _ \ /    \ " -ForegroundColor Yellow
Write-Host " |    |   \\___  | |  |   |  | \(  <_> )   |  \" -ForegroundColor Yellow
Write-Host " |______  // ____| |__|   |__|   \____/|___|  /" -ForegroundColor Yellow
Write-Host "        \/ \/                               \/ " -ForegroundColor Yellow
Write-ColoredLine ""
Write-ColoredLine "=== Recording Rule Hub ===" Yellow
Write-ColoredLine "Complete both steps with 100% success to pass." White
Write-ColoredLine "Applications will download and extract to C:\ToolsETA." White
Write-ColoredLine "If a prompt shows up, press OK to run the application." White
Write-ColoredLine "Follow the instructions listed on each step." White
Write-ColoredLine "This T1 PowerShell process currently has 2 steps." White
Write-Host ""

# --- Auto Detect newui.exe ---
$newuiPath = "C:\ToolsETA\newui.exe"
if (Test-Path $newuiPath) {
    Write-ColoredLine "[SUCCESS] Detected newui.exe at $newuiPath" Green
} else {
    Write-ColoredLine "[WARNING] newui.exe not found in C:\ToolsETA." Yellow
}

# --- Auto Detect _license.dat ---
$licensePath = "C:\ToolsETA\_license.dat"
if (Test-Path $licensePath) {
    try {
        $key = Get-Content -Path $licensePath -ErrorAction Stop | Out-String
        $key = $key.Trim()
        Write-ColoredLine "Matrix Key Found: $key" Cyan
    } catch {
        Write-ColoredLine "[WARNING] Could not read _license.dat: $($_.Exception.Message)" Yellow
    }
} else {
    Write-ColoredLine "[INFO] No _license.dat file found." White
}

Write-Host ""

$cpu = Get-WmiObject Win32_Processor | Select-Object -First 1

if ($cpu.NumberOfCores -ge 4 -and $cpu.MaxClockSpeed -ge 2500) {
    Write-Host "Detected CPU: $($cpu.Name)" -ForegroundColor Green
    Write-Host "Your CPU looks good." -ForegroundColor Green 
} else {
    Write-Host "Detected CPU: $($cpu.Name)" -ForegroundColor Red
    Write-Host "Your CPU may be a bit weak. This process may take longer for you." -ForegroundColor Yellow
}

Write-Host ""
 
$gpu = Get-WmiObject Win32_VideoController | Select-Object -First 1
$gpuName = $gpu.Name

# Define "good" GPU keywords (can expand as needed)
$goodGPUs = @("RTX 30", "RTX 40", "RX 6000", "RX 7000")

$gpuIsGood = $false
foreach ($keyword in $goodGPUs) {
    if ($gpuName -like "*$keyword*") { $gpuIsGood = $true; break }
}

if ($gpuIsGood) {
    Write-Host "Detected GPU: $gpuName" -ForegroundColor Green
    Write-Host "Your GPU looks good." -ForegroundColor Green 
} else {
    Write-Host "Detected GPU: $gpuName" -ForegroundColor Red
    Write-Host "Your GPU may be a bit weak. Some processes may be slower." -ForegroundColor Yellow
}
Write-ColoredLine ""
Write-ColoredLine "=== Discord Server ===" Yellow
Write-ColoredLine "Coming soon..." White
Write-ColoredLine ""
Write-ColoredLine "=== Credits ===" Yellow
Write-ColoredLine "Made by @clearfall" White
Write-Host ""
Wait-ForEnter -Message "Press Enter to Continue"

# (rest of your original script remains completely unchanged below this line)
# ============================================================
# STEP 1, STEP 2, etc...
# ============================================================
